(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{626:function(t,e,r){t.exports=r.p+"assets/img/blue-4.378ab4d3.jpg"},627:function(t,e,r){t.exports=r.p+"assets/img/blue-1.d92ba0ff.jpg"},628:function(t,e,r){t.exports=r.p+"assets/img/blue-3.e8e94318.jpg"},629:function(t,e,r){t.exports=r.p+"assets/img/blue-5.213064bf.jpg"},630:function(t,e,r){t.exports=r.p+"assets/img/blue-6.e36827c3.png"},631:function(t,e,r){t.exports=r.p+"assets/img/blue-7.616e2c07.png"},632:function(t,e,r){t.exports=r.p+"assets/img/blue-8.f579e198.png"},633:function(t,e,r){t.exports=r.p+"assets/img/blue-9.9d65fb14.png"},744:function(t,e,r){"use strict";r.r(e);var a=r(4),o=Object(a.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"bluetooth发展历史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bluetooth发展历史"}},[t._v("#")]),t._v(" BlueTooth发展历史")]),t._v(" "),a("p",[t._v("蓝牙 4.0 是迄今为止第一个蓝牙综合协议规范，将三种规格集成在一起。其中最重要的变化就是 BLE（Bluetooth Low Energy）低功耗功能，提出了低功耗蓝牙、传统蓝牙和高速蓝牙三种模式：\n「高速蓝牙」主攻数据交换与传输；「传统蓝牙」则以信息沟通、设备连接为重点；「低功耗蓝牙」以不需占用太多带宽的设备连接为主，功耗较老版本降低了 90%。")]),t._v(" "),a("p",[t._v("开启「物联网」时代大门")]),t._v(" "),a("p",[t._v("蓝牙 5.0 在低功耗模式下具备更快更远的传输能力，传输速率是蓝牙 4.2 的两倍（速度上限为 2Mbps），有效传输距离是蓝牙 4.2 的四倍（理论上可达 300 米），数据包容量是蓝牙 4.2 的八倍。")]),t._v(" "),a("p",[t._v("支持室内定位导航功能，结合 WiFi 可以实现精度小于 1 米的室内定位。")]),t._v(" "),a("p",[t._v("Mesh 网状网络：实现物联网的关键「钥匙」")]),t._v(" "),a("p",[t._v("传统的蓝牙连接是通过一台设备到另一台设备的「配对」实现的，建立「一对一」或「一对多」的微型网络关系。")]),t._v(" "),a("p",[t._v("而 Mesh 网络能够使设备实现「多对多」的关系。Mesh 网络中每个设备节点都能发送和接收信息，只要有一个设备连上网关，信息就能够在节点之间被中继，从而让消息传输至比无线电波正常传输距离更远的位置。")]),t._v(" "),a("p",[t._v("这样，Mesh 网络就可以分布在制造工厂、办公楼、购物中心、商业园区以及更广的场景中，为照明设备、工业自动化设备、安防摄像机、烟雾探测器和环境传感器提供更稳定的控制方案。")]),t._v(" "),a("p",[t._v("Basic Rate/Enhanced Data Rate (BR/EDR)基本速率/增强数据速率即所谓的传统蓝牙技术（蓝牙版本2.0/2.1）：仅支持P2P一种通信方式，即1：1设备间通信，具有持续无线连接、优化音频流的特点，所以是蓝牙耳机、蓝牙扬声器等音频传输的理想方案\nLow Energy (LE)低功耗即所谓的新型的低功耗蓝牙技术（蓝牙版本4.0/4.1/4.2/4.3），支持三种通信方式：第一，P2P(point-to-point)（点对点）:1:1支持短时间无限连接，优化了数据传输能量消耗，可用于无线键盘、无线鼠标等。第二，broadcast（广播信息）:1:m。可以实现本地化信息共享。广播信息顾名思义，一设备广播信息，其他对该信息感兴趣的设备接受该信息并进行处理。比如beacon。第三，mesh(网格)Ⓜ️m")]),t._v(" "),a("p",[a("img",{attrs:{src:r(626),alt:"4"}})]),t._v(" "),a("h3",{attrs:{id:"蓝牙协议分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#蓝牙协议分类"}},[t._v("#")]),t._v(" 蓝牙协议分类")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("蓝牙核心协议：基带管理BB（baseBand），链路管理LMP（linkManagerProtocol），链路控制和适配L2CAP（LogicalLinkControlAndAdaptionProtocol）,服务发现SDP(ServiceDiscoveryProtocol)协议。")])]),t._v(" "),a("li",[a("p",[t._v("蓝牙电缆替代协议：RFCOMM协议")])]),t._v(" "),a("li",[a("p",[t._v("蓝牙电话控制协议：电话通信协议TCS协议，AT命令集")])]),t._v(" "),a("li",[a("p",[t._v("蓝牙选用协议：PPP，obex，Vcard（卡片传输），Vcal（日历传输）等等。")])])]),t._v(" "),a("h2",{attrs:{id:"ble"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ble"}},[t._v("#")]),t._v(" BLE")]),t._v(" "),a("p",[t._v("蓝牙协议是通信协议的一种，一般而言，我们把某个协议的实现代码称为协议栈（protocol stack），BLE协议栈就是实现低功耗蓝牙协议的代码，理解和掌握BLE协议是实现BLE协议栈的前提。")]),t._v(" "),a("p",[t._v("要实现一个BLE应用，首先需要一个支持BLE射频的芯片，然后还需要提供一个与此芯片配套的BLE协议栈，最后在协议栈上开发自己的应用。可以看出BLE协议栈是连接芯片和应用的桥梁，是实现整个BLE应用的关键。那BLE协议栈具体包含哪些功能呢？简单来说，BLE协议栈主要用来对你的应用数据进行层层封包，以生成一个满足BLE协议的空中数据包，也就是说，把应用数据包裹在一系列的帧头（header）和帧尾（tail）中。")]),t._v(" "),a("p",[t._v("蓝牙协议规定了两个层次的协议，分别为蓝牙核心协议（Bluetooth Core）和蓝牙应用层协议（Bluetooth Application）。蓝牙核心协议关注对蓝牙核心技术的描述和规范，它只提供基础的机制，并不关心如何使用这些机制；蓝牙应用层协议，是在蓝牙核心协议的基础上，根据具体的应用需求，百花齐放，定义出各种各样的策略，如FTP、文件传输、局域网等等。")]),t._v(" "),a("p",[a("img",{attrs:{src:r(627),alt:"1"}}),t._v(" "),a("img",{attrs:{src:r(628),alt:"3"}})]),t._v(" "),a("p",[t._v("1、物理层（Physical Layer，简写 PHY）：PHY层用来指定BLE所用的无线频段，调制解调方式和方法等。是1Mbps自适应跳频的GFSK射频，工作于免许可证的2.4GHz ISM（工业、科学与医疗）频段。PHY层做得好不好，直接决定整个BLE芯片的功耗，灵敏度以及selectivity等射频指标。")]),t._v(" "),a("p",[t._v("2、链路层（Link Layer，简写 LL）：LL层是整个BLE协议栈的核心，也是BLE协议栈的难点和重点。LL层要做的事情非常多，比如具体选择哪程度 个射频通道进行通信，怎么识别空中数据包，具体在哪个时间点把数据包发送出去，怎么保证数据的完整性，ACK如何接收，如何进行重传，以及如何对链路进行管理和控制等等。LL层只负责把数据发出去或者收回来，对数据进行怎样的解析则交给上面的GAP或者ATT。")]),t._v(" "),a("p",[t._v("3.主机控制接口层（Host Controller Interface，简写 HCI）：HCI是可选的，HCI主要用于2颗芯片实现BLE协议栈的场合，用来规范两者之间的通信协议和通信命令等。")]),t._v(" "),a("p",[t._v("4、通用访问配置文件层（Generic access profile，简写GAP）：GAP是对LL层payload（有效数据包）如何进行解析的两种方式中的一种，而且是最简单的那一种。GAP简单的对LL payload进行一些规范和定义，因此GAP能实现的功能极其有限。GAP目前主要用来进行广播，扫描和发起连接等。")]),t._v(" "),a("p",[t._v("5逻辑链路控制及自适应协议层（Logical Link Control and Adaptation Protocol，简写 L2CAP）：L2CAP对LL进行了一次简单封装，LL只关心传输的数据本身，L2CAP就要区分是加密通道还是普通通道，同时还要对连接间隔进行管理。")]),t._v(" "),a("p",[t._v("6、安全管理层（Security Manager，简写 SM）：SMP用来管理BLE连接的加密和安全的，如何保证连接的安全性，同时不影响用户的体验，这些都是SMP要考虑的工作。")]),t._v(" "),a("p",[t._v("7、属性协议层（Attribute protocol，简写 ATT）：简单来说，ATT层用来定义用户命令及命令操作的数据，比如读取某个数据或者写某个数据。BLE协议栈中，开发者接触最多的就是ATT。BLE引入了attribute概念，用来描述一条一条的数据。Attribute除了定义数据，同时定义该数据可以使用的ATT命令，因此这一层被称为ATT层。")]),t._v(" "),a("p",[t._v("8、通用属性配置文件层（Generic Attribute profile，简写 GATT）：GATT用来规范attribute中的数据内容，并运用group（分组）的概念对attribute进行分类管理。没有GATT，BLE协议栈也能跑，但互联互通就会出问题，也正是因为有了GATT和各种各样的应用profile，BLE摆脱了ZigBee等无线协议的兼容性困境，成了出货量最大的2.4G无线通信产品。")]),t._v(" "),a("h2",{attrs:{id:"profile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#profile"}},[t._v("#")]),t._v(" Profile")]),t._v(" "),a("p",[t._v("在所有的Profile中，有四种是基本的Profile，这些Profile会被其它的Profile使用，它们包括GAP/SDAP/SPP/GOEP Profile。")]),t._v(" "),a("h3",{attrs:{id:"gap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gap"}},[t._v("#")]),t._v(" GAP")]),t._v(" "),a("p",[t._v("GAP Profile: Generic Access Profile，该Profile保证不同的Bluetooth产品可以互相发现对方并建立连接。")]),t._v(" "),a("p",[t._v("一般访问应用规范（GAP）定义了蓝牙设备如何发现和建立与其他设备的安全（或不安全）连接。它处理一些一般模式的业务（如询问、命名和搜索）和一些安全性问题（如担保），同时还处理一些有关连接的业务（如链路建立、信道和连接建立）。GAP规定的是一些一般性的运行任务。因此，它具有强制性，并作为所有其它蓝牙应用规范的基础。")]),t._v(" "),a("h3",{attrs:{id:"sdap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sdap"}},[t._v("#")]),t._v(" SDAP")]),t._v(" "),a("p",[t._v("SDAP Profile: Service Discovery Application Profile，通过该Profile，一个Bluetooth设备可以找到其它Bluetooth设备提供的服务，以及查询相关的信息。")]),t._v(" "),a("h3",{attrs:{id:"spp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spp"}},[t._v("#")]),t._v(" SPP")]),t._v(" "),a("p",[t._v("全称Serial Port Profile，定义了如何在两台BT设备之间建立虚拟串口并进行连接。")]),t._v(" "),a("h3",{attrs:{id:"goep"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#goep"}},[t._v("#")]),t._v(" GOEP")]),t._v(" "),a("p",[t._v("GOEP Profile: Generic Object Exchange Profile，通用对象交换。这个Profile的名字有些费解，它定义的是数据的传输，包括同步，文件传输，或者推送其它的数据。可以理解为与内容无关的传输层协议，可以被任何应用用来传输自己定义的数据对象。")]),t._v(" "),a("h3",{attrs:{id:"a2dp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#a2dp"}},[t._v("#")]),t._v(" A2DP")]),t._v(" "),a("p",[t._v("A2DP 全名是Advenced Audio Distribution Profile 蓝牙音频传输模型协定。")]),t._v(" "),a("h3",{attrs:{id:"dun"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dun"}},[t._v("#")]),t._v(" DUN")]),t._v(" "),a("p",[t._v("全称Dial-up Networking (DUN) Profile，实现一台蓝牙设备通过另外一个带无线功能的蓝牙设备共享上网。")]),t._v(" "),a("h3",{attrs:{id:"vrcp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vrcp"}},[t._v("#")]),t._v(" VRCP")]),t._v(" "),a("p",[t._v("AVRCP（Audio/Video Remote Control Profile），也就是音频/视频远程控制配置文件。")]),t._v(" "),a("h3",{attrs:{id:"hid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hid"}},[t._v("#")]),t._v(" HID")]),t._v(" "),a("p",[t._v("HID全称Human Interface Device Profile, 即人机接口设备Profile.")]),t._v(" "),a("h2",{attrs:{id:"android-blue-framework"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#android-blue-framework"}},[t._v("#")]),t._v(" Android blue framework")]),t._v(" "),a("p",[t._v("整个bluedroid可以分为两大模块：BTIF，BTE\nBTIF：提供bluedroid对外的接口\nBTE：bluedroid的内部处理，又细分为BTA，BTU，BTM和HCI\nBTA：bluedroid中各profile的逻辑实现和处理\nBTU：承接BTA与HCI\nBTM：蓝牙配对与链路管理\nHCI：读取或写入数据到蓝牙hw")]),t._v(" "),a("p",[a("img",{attrs:{src:r(629),alt:"5"}})]),t._v(" "),a("p",[a("img",{attrs:{src:r(630),alt:"6"}})]),t._v(" "),a("p",[a("img",{attrs:{src:r(631),alt:"7"}})]),t._v(" "),a("p",[a("img",{attrs:{src:r(632),alt:"8"}})]),t._v(" "),a("h2",{attrs:{id:"framework"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#framework"}},[t._v("#")]),t._v(" framework")]),t._v(" "),a("p",[a("img",{attrs:{src:r(633),alt:"9"}})]),t._v(" "),a("p",[t._v("1.基带层（BB）提供了两种不同的物理链路（同步面向连接链路SCO Synchronous Connection Oriented和异步无连接链路ACL Asynchronous Connection Less）,负责跳频和蓝牙数据及信息帧的传输，且对所有类型的数据包提供了不同层次的前向纠错码（FEC Frequency Error Correction）或循环沉余度差错校验（CTC Cyclic Redundancy Check）；")]),t._v(" "),a("p",[t._v("2.LMP层负责两个或多个设备链路的建立和拆除及链路的安全和控制，如鉴权和加密、控制和协商基带包的大小等，它为上层软件模块提供了不同的访问入口；")]),t._v(" "),a("p",[t._v("3.蓝牙主机控制器接口HCI （Host Controller Interface）由基带控制器、连接管理器、控制和事件寄存器等组成。它是蓝牙协议中软硬件之间的接口，它提供了一个调用下层BB、LM、状态和控制寄存器等硬件的统一命令,上、下两个模块接口之间的消息和数据的传递必须通过HCI的解释才能进行。HCI层以上的协议软件实体运行在主机上，而HCI以下的功能由蓝牙设备耒完成，二者之间通过传输层进行交互。")]),t._v(" "),a("p",[t._v("4.中间协议层由逻辑链路控制与适配协议L2CAP （Logical Link Control and Adaptation Protocol）、服务发现协议 SDP （Service Discovery Protocol）、串口仿真协议或称线缆替换协议 RFCOM 和二进制电话控制协议 TCS （Telephony Control protocol Spectocol）组成。")]),t._v(" "),a("p",[t._v("L2CAP 是蓝牙协议栈的核心组成部分，也是其它协议实现的基础。它位于基带之上，向上层提供面向连接的和无连接的数据服务。它主要完成数据的拆装、服务质量控制，协议的复用、分组的分割和重组（Segmentation And Reassembly）及组提取等功能。L2CAP允许高达64KB的数据分组。")]),t._v(" "),a("p",[t._v("5.SDP是一个基于客户/服务器结构的协议。它工作在 L2CAP层之上，为上层应用程序提供一种机制来发现可用的服务及其属性,而服务的属性包括服务的类型及该服务所需的机制或协议信息。")]),t._v(" "),a("p",[t._v("6.RFCOMM 是一个仿真有线链路的无线数据仿真协议，符合ETSI 标准的 TS 07.10串口仿真协议。它在蓝牙基带上仿真RS-232的控制和数据信号，为原先使用串行连接的上层业务提供传送能力。")]),t._v(" "),a("p",[t._v("7.TCS是一个基于 ITU-T Q.931 建议的采用面向比特的协议,它定义了用于蓝牙设备之间建立语音和数据呼叫的控制信令（Call Control Signalling），并负责处理蓝牙设备组的移动管理过程。")]),t._v(" "),a("h2",{attrs:{id:"链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链接"}},[t._v("#")]),t._v(" 链接")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/shunfa888/article/details/80140475",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入浅出低功耗蓝牙(BLE)协议栈"),a("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=o.exports}}]);